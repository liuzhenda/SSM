<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zhenda_liu.dao.MeetingMapper">
  <resultMap id="BaseResultMap" type="zhenda_liu.domain.Meeting">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="mrid" jdbcType="INTEGER" property="mrid" />
    <result column="ouid" jdbcType="INTEGER" property="ouid" />
    <result column="startt" jdbcType="TIMESTAMP" property="startt" />
    <result column="ftime" jdbcType="TIMESTAMP" property="ftime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="mupdatetime" jdbcType="TIMESTAMP" property="mupdatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, mrid, ouid, startt, ftime, state, mupdatetime
  </sql>
  <select id="selectByExample" parameterType="zhenda_liu.domain.MeetingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meeting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from meeting
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meeting
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="zhenda_liu.domain.MeetingExample">
    delete from meeting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zhenda_liu.domain.Meeting">
    insert into meeting (mid, mrid, ouid, 
      startt, ftime, state, 
      mupdatetime)
    values (#{mid,jdbcType=INTEGER}, #{mrid,jdbcType=INTEGER}, #{ouid,jdbcType=INTEGER}, 
      #{startt,jdbcType=TIMESTAMP}, #{ftime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{mupdatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="zhenda_liu.domain.Meeting">
    insert into meeting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="mrid != null">
        mrid,
      </if>
      <if test="ouid != null">
        ouid,
      </if>
      <if test="startt != null">
        startt,
      </if>
      <if test="ftime != null">
        ftime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="mupdatetime != null">
        mupdatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="mrid != null">
        #{mrid,jdbcType=INTEGER},
      </if>
      <if test="ouid != null">
        #{ouid,jdbcType=INTEGER},
      </if>
      <if test="startt != null">
        date_format(#{startt,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%m:%d'),
      </if>
      <if test="ftime != null">
        date_format(#{ftime,jdbcType=TIMESTAMP},'%Y-%m-%d %H:%m:%d'),
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="mupdatetime != null">
        #{mupdatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zhenda_liu.domain.MeetingExample" resultType="java.lang.Long">
    select count(*) from meeting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meeting
    <set>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.mrid != null">
        mrid = #{record.mrid,jdbcType=INTEGER},
      </if>
      <if test="record.ouid != null">
        ouid = #{record.ouid,jdbcType=INTEGER},
      </if>
      <if test="record.startt != null">
        startt = #{record.startt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ftime != null">
        ftime = #{record.ftime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.mupdatetime != null">
        mupdatetime = #{record.mupdatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meeting
    set mid = #{record.mid,jdbcType=INTEGER},
      mrid = #{record.mrid,jdbcType=INTEGER},
      ouid = #{record.ouid,jdbcType=INTEGER},
      startt = #{record.startt,jdbcType=TIMESTAMP},
      ftime = #{record.ftime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      mupdatetime = #{record.mupdatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zhenda_liu.domain.Meeting">
    update meeting
    <set>
      <if test="mrid != null">
        mrid = #{mrid,jdbcType=INTEGER},
      </if>
      <if test="ouid != null">
        ouid = #{ouid,jdbcType=INTEGER},
      </if>
      <if test="startt != null">
        startt = #{startt,jdbcType=TIMESTAMP},
      </if>
      <if test="ftime != null">
        ftime = #{ftime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="mupdatetime != null">
        mupdatetime = #{mupdatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zhenda_liu.domain.Meeting">
    update meeting
    set mrid = #{mrid,jdbcType=INTEGER},
      ouid = #{ouid,jdbcType=INTEGER},
      startt = #{startt,jdbcType=TIMESTAMP},
      ftime = #{ftime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      mupdatetime = #{mupdatetime,jdbcType=TIMESTAMP}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
</mapper>